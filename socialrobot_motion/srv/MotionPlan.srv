# target body of the robot
int32 targetBody
int32 WHOLE_BODY = 0
int32 LEFT_ARM = 1
int32 RIGHT_ARM = 2
int32 LEFT_ARM_WITHOUT_WAIST = 12
int32 RIGHT_ARM_WITHOUT_WAIST = 22
int32 BOTH_ARM = 3
int32 LEFT_GRIPPER = 4
int32 RIGHT_GRIPPER = 8
int32 BOTH_GRIPPER = 16
int32 MOBILE_BASE = 32

# Obstacles environment
string[] obstacle_ids
vision_msgs/BoundingBox3D[] obstacles
bool is_tracking

# target object
string[] targetObject

#############
## Moveit! ##
#############

# goal type
int32 goalType
int32 CARTESIAN_SPACE_GOAL = 0
int32 JOINT_SPACE_GOAL = 1
int32 CARTESIAN_WITH_ORIENTATION_CONSTRAINTS = 10
int32 CARTESIAN_WITH_POSITION_CONSTRAINTS = 11

# target pose (EEF pose or joint state)
sensor_msgs/JointState[] targetJointState
geometry_msgs/Pose[] targetPose

# robot state
sensor_msgs/JointState currentJointState

# find manipulability
bool find_manipulability

# constraints
float32 velocity_scaling_factor
float32 acceleration_scaling_factor
geometry_msgs/Pose orientation_constraint
geometry_msgs/PoseWithCovariance position_constraint

##############
## Graspit! ##
##############

# gripper pose
geometry_msgs/Pose gripper_pose


---
int32 planResult
int32 SUCCESS = 0
int32 ERROR_INPUT = 1
int32 ERROR_NO_SOLUTION = 2
int32 ERROR_FAIL = 3

# for Moveit
trajectory_msgs/JointTrajectory jointTrajectory
float64 manipulability

# for Graspit!
geometry_msgs/Pose[] endEffectorPose
float64[] graspQuality
std_msgs/Float32MultiArray dofs

# push/pull
nav_msgs/OccupancyGrid gridMap

# path planner
nav_msgs/Path pathTrajectory
